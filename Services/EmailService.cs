using System.Net;
using System.Net.Mail;
using System.Text;

namespace FertilizerWarehouseAPI.Services
{
    public class EmailService : IEmailService
    {
        private readonly ILogger<EmailService> _logger;
        private readonly IConfiguration _configuration;

        public EmailService(ILogger<EmailService> logger, IConfiguration configuration)
        {
            _logger = logger;
            _configuration = configuration;
        }

        public async Task<bool> SendPasswordResetEmailAsync(string toEmail, string username, string newPassword)
        {
            try
            {
                var subject = "M·∫≠t kh·∫©u m·ªõi - H·ªá th·ªëng Qu·∫£n l√Ω Kho";
                var body = $@"
                    <html>
                    <body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>
                        <div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>
                            <h2 style='color: #2c5aa0; text-align: center;'>üîê M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n</h2>
                            
                            <p>Xin ch√†o <strong>{username}</strong>,</p>
                            
                            <p>Qu·∫£n tr·ªã vi√™n ƒë√£ c·∫•p l·∫°i m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n c·ªßa b·∫°n:</p>
                            
                            <div style='background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center;'>
                                <h3 style='color: #2c5aa0; margin: 0;'>M·∫≠t kh·∫©u m·ªõi: <code style='background-color: #e9ecef; padding: 5px 10px; border-radius: 3px;'>{newPassword}</code></h3>
                            </div>
                            
                            <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                            <ul>
                                <li>Vui l√≤ng ƒëƒÉng nh·∫≠p v√† thay ƒë·ªïi m·∫≠t kh·∫©u ngay l·∫≠p t·ª©c</li>
                                <li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                                <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n</li>
                            </ul>
                            
                            <div style='text-align: center; margin: 30px 0;'>
                                <a href='http://localhost:3000/login' style='background-color: #2c5aa0; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block;'>ƒêƒÉng nh·∫≠p ngay</a>
                            </div>
                            
                            <hr style='border: none; border-top: 1px solid #eee; margin: 30px 0;'>
                            <p style='font-size: 12px; color: #666; text-align: center;'>
                                Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ H·ªá th·ªëng Qu·∫£n l√Ω Kho.<br>
                                Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.
                            </p>
                        </div>
                    </body>
                    </html>";

                return await SendEmailAsync(toEmail, subject, body);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending password reset email to {Email}", toEmail);
                return false;
            }
        }

        public async Task<bool> SendPasswordResetRequestNotificationAsync(string adminEmail, string username, string userEmail, string message)
        {
            try
            {
                var subject = $"Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u - {username}";
                var body = $@"
                    <html>
                    <body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>
                        <div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>
                            <h2 style='color: #dc3545; text-align: center;'>‚ö†Ô∏è Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u</h2>
                            
                            <p>Qu·∫£n tr·ªã vi√™n th√¢n m·∫øn,</p>
                            
                            <p>C√≥ m·ªôt y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u m·ªõi t·ª´ ng∆∞·ªùi d√πng:</p>
                            
                            <div style='background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;'>
                                <p><strong>T√™n ƒëƒÉng nh·∫≠p:</strong> {username}</p>
                                <p><strong>Email:</strong> {userEmail}</p>
                                <p><strong>Th·ªùi gian:</strong> {DateTime.Now:dd/MM/yyyy HH:mm:ss}</p>
                                <p><strong>N·ªôi dung:</strong></p>
                                <div style='background-color: white; padding: 10px; border-left: 4px solid #2c5aa0; margin: 10px 0;'>
                                    {message ?? "Kh√¥ng c√≥ n·ªôi dung b·ªï sung"}
                                </div>
                            </div>
                            
                            <div style='text-align: center; margin: 30px 0;'>
                                <a href='http://localhost:3000/user-management' style='background-color: #2c5aa0; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block;'>Xem chi ti·∫øt</a>
                            </div>
                            
                            <hr style='border: none; border-top: 1px solid #eee; margin: 30px 0;'>
                            <p style='font-size: 12px; color: #666; text-align: center;'>
                                Email th√¥ng b√°o t·ª´ H·ªá th·ªëng Qu·∫£n l√Ω Kho
                            </p>
                        </div>
                    </body>
                    </html>";

                return await SendEmailAsync(adminEmail, subject, body);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending password reset request notification to admin {Email}", adminEmail);
                return false;
            }
        }

        public async Task<bool> SendPasswordResetApprovalEmailAsync(string toEmail, string username)
        {
            try
            {
                var subject = "Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c duy·ªát";
                var body = $@"
                    <html>
                    <body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>
                        <div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>
                            <h2 style='color: #28a745; text-align: center;'>‚úÖ Y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c duy·ªát</h2>
                            
                            <p>Xin ch√†o <strong>{username}</strong>,</p>
                            
                            <p>Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c qu·∫£n tr·ªã vi√™n duy·ªát. M·∫≠t kh·∫©u m·ªõi s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email n√†y trong v√†i ph√∫t t·ªõi.</p>
                            
                            <div style='background-color: #d4edda; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #28a745;'>
                                <p style='margin: 0;'><strong>Tr·∫°ng th√°i:</strong> ƒê√£ duy·ªát</p>
                                <p style='margin: 5px 0 0 0;'><strong>Th·ªùi gian:</strong> {DateTime.Now:dd/MM/yyyy HH:mm:ss}</p>
                            </div>
                            
                            <p>Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ nh·∫≠n m·∫≠t kh·∫©u m·ªõi v√† ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng.</p>
                            
                            <hr style='border: none; border-top: 1px solid #eee; margin: 30px 0;'>
                            <p style='font-size: 12px; color: #666; text-align: center;'>
                                Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ H·ªá th·ªëng Qu·∫£n l√Ω Kho
                            </p>
                        </div>
                    </body>
                    </html>";

                return await SendEmailAsync(toEmail, subject, body);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending password reset approval email to {Email}", toEmail);
                return false;
            }
        }

        public async Task<bool> SendPasswordResetRejectionEmailAsync(string toEmail, string username, string reason)
        {
            try
            {
                var subject = "Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u b·ªã t·ª´ ch·ªëi";
                var body = $@"
                    <html>
                    <body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>
                        <div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>
                            <h2 style='color: #dc3545; text-align: center;'>‚ùå Y√™u c·∫ßu b·ªã t·ª´ ch·ªëi</h2>
                            
                            <p>Xin ch√†o <strong>{username}</strong>,</p>
                            
                            <p>Y√™u c·∫ßu c·∫•p l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi b·ªüi qu·∫£n tr·ªã vi√™n.</p>
                            
                            <div style='background-color: #f8d7da; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #dc3545;'>
                                <p style='margin: 0;'><strong>L√Ω do t·ª´ ch·ªëi:</strong></p>
                                <p style='margin: 5px 0 0 0;'>{reason}</p>
                            </div>
                            
                            <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ th√™m, vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp v·ªõi qu·∫£n tr·ªã vi√™n.</p>
                            
                            <hr style='border: none; border-top: 1px solid #eee; margin: 30px 0;'>
                            <p style='font-size: 12px; color: #666; text-align: center;'>
                                Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ H·ªá th·ªëng Qu·∫£n l√Ω Kho
                            </p>
                        </div>
                    </body>
                    </html>";

                return await SendEmailAsync(toEmail, subject, body);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending password reset rejection email to {Email}", toEmail);
                return false;
            }
        }

        private async Task<bool> SendEmailAsync(string toEmail, string subject, string body)
        {
            try
            {
                // For development, we'll just log the email content
                // In production, configure actual SMTP settings
                _logger.LogInformation("=== EMAIL SENT ===");
                _logger.LogInformation("To: {ToEmail}", toEmail);
                _logger.LogInformation("Subject: {Subject}", subject);
                _logger.LogInformation("Body: {Body}", body);
                _logger.LogInformation("==================");

                // TODO: Implement actual SMTP sending
                // var smtpClient = new SmtpClient("smtp.gmail.com", 587);
                // smtpClient.Credentials = new NetworkCredential("your-email@gmail.com", "your-password");
                // smtpClient.EnableSsl = true;
                // 
                // var mailMessage = new MailMessage
                // {
                //     From = new MailAddress("your-email@gmail.com"),
                //     Subject = subject,
                //     Body = body,
                //     IsBodyHtml = true
                // };
                // mailMessage.To.Add(toEmail);
                // 
                // await smtpClient.SendMailAsync(mailMessage);

                return true;
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error sending email to {Email}", toEmail);
                return false;
            }
        }
    }
}
